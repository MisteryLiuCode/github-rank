[
  {
    "title": "React 源码解析系列 - React 的 render 阶段（一）：基本流程介绍",
    "description": "render 阶段根据 JSX 转化成的 ReactElement （更准确地来说，jsx 经 babel 转化后是 React.createElement() 的代码段，在 render 阶段该代码段被执行后便生成了对应的 ReactElement 对象）来创建 Fiber 树；Reac...",
    "url": "https://segmentfault.com/a/1190000040437854",
    "author": "array_huang",
    "home_url": "https://segmentfault.com/u/array_huang",
    "votes": "1",
    "rank": 1
  },
  {
    "title": "手把手使用VuePress搭建Element的组件库文档官网",
    "description": "社区里面有很多优秀的文档工具可以供我们前端程序员选择，例如Gitbook、Hexo、Docusaurus。就个人使用而言，体验最好的文档工具是Docusaurus。",
    "url": "https://segmentfault.com/a/1190000040437920",
    "author": "熠辉",
    "home_url": "https://segmentfault.com/u/leetanghui",
    "votes": "1",
    "rank": 2
  },
  {
    "title": "【C进阶】4、类型之间的转换",
    "description": "Summary0）工程中需要避免隐式转换，强转有时无法避免，但一定要时刻注意操作的数据的类型，对操作的数据的类型要十分明晰，对转换的结果也要十分明晰。1）C语言中有强制类型转换和隐式类型转换2）强制类型转换的...",
    "url": "https://segmentfault.com/a/1190000040437887",
    "author": "bryson",
    "home_url": "https://segmentfault.com/u/lala_60a20654d1aa3",
    "votes": "1",
    "rank": 3
  },
  {
    "title": "【C进阶】3、浮点数的秘密",
    "description": "3）浮点数的转换如：浮点数-8.25的二进制转换，float类型：1. 符号位：1（负数）2. 绝对值二进制：1000.01（整数部分的指数依次为0,1,2...;负数部分的指数一次为-1,-2,-3...）3. 科学计数法：1.00001 * 23，指数...",
    "url": "https://segmentfault.com/a/1190000040437146",
    "author": "bryson",
    "home_url": "https://segmentfault.com/u/lala_60a20654d1aa3",
    "votes": "1",
    "rank": 4
  },
  {
    "title": "【C进阶】2、有符号与无符号",
    "description": "Summary0）在进行数据运算、使用变量的时候，一定要十分清楚变量的具体类型！1）对于整形数据，数据类型的最高位用于标识数据的符号：最高位为1表示负数，最高位为0表示整数。2）类型溢出时的运算总结：溢出的值...",
    "url": "https://segmentfault.com/a/1190000040436930",
    "author": "bryson",
    "home_url": "https://segmentfault.com/u/lala_60a20654d1aa3",
    "votes": "1",
    "rank": 5
  },
  {
    "title": "js烧脑面试题大赏",
    "description": "本文精选了20多道具有一定迷惑性的js题，主要考察的是类型判断、作用域、this指向、原型、事件循环等知识点，每道题都配有笔者详细傻瓜式的解析，偏向于初学者，大佬请随意。",
    "url": "https://segmentfault.com/a/1190000040436629",
    "author": "街角小林",
    "home_url": "https://segmentfault.com/u/jiejiaoxiaolin",
    "votes": "1",
    "rank": 6
  },
  {
    "title": "面试算法：单链表反转",
    "description": "面试算法：单链表反转给定一个单链表 list，请将它反转后返回，示例：原链表：反转链表：定义的单链表结点类结构如下： {代码...} 我们先写两个方法，用于组装成链表和将链表打印到控制台，方便进行算法结果验证...",
    "url": "https://segmentfault.com/a/1190000040437828",
    "author": "calvinit",
    "home_url": "https://segmentfault.com/u/calvinit",
    "votes": "1",
    "rank": 7
  },
  {
    "title": "一行代码实现微前端",
    "description": "看到标题，大家首先想到的应该是iframe，诚然iframe的确可以做到，但是我们今天要讲的并不是它，而是新推出的一款微前端框架micro-app。至于为什么不用iframe，可以参考Why Not Iframe。",
    "url": "https://segmentfault.com/a/1190000040437468",
    "author": "cangdu",
    "home_url": "https://segmentfault.com/u/cangdu",
    "votes": "2",
    "rank": 8
  },
  {
    "title": "利用LRU策略实现Axios请求缓存",
    "description": "前一段时间刚做完一个项目，先说一下业务场景，有别于其他的前端项目，这次的项目是直接调用第三方服务的接口，而我们的服务端只做鉴权和透传，第三方为了灵活，把接口拆的很零散，所以这个项目就像扔给你一堆乐...",
    "url": "https://segmentfault.com/a/1190000040437098",
    "author": "不死小强",
    "home_url": "https://segmentfault.com/u/busixiaoqiang",
    "votes": "1",
    "rank": 9
  }
]