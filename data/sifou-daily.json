[
  {
    "title": "CSS实现渐变色边框（Gradient borders）的5种方法",
    "description": "CSS 提供了 border-image 属性用于给 border 绘制复杂图样，与 background-image 类似，我们可以在 border 中展示image和linear-gradient。",
    "url": "https://segmentfault.com/a/1190000040794056",
    "author": "MudOnTire",
    "home_url": "https://segmentfault.com/u/mudontire",
    "votes": "5",
    "rank": 1
  },
  {
    "title": "详解es6的export和import命令",
    "description": "一直以来开发vue项目，对export和import的用法都比较模糊，看别人怎么写我就照葫芦画瓢，不报错或者功能实现就行，完全不懂其中的原理，今日闲下来了，就揭穿它们的真面目吧！",
    "url": "https://segmentfault.com/a/1190000040792388",
    "author": "花怀樱",
    "home_url": "https://segmentfault.com/u/zero_599d47cbc8888zrn",
    "votes": "3",
    "rank": 2
  },
  {
    "title": "精读《可维护性思考》",
    "description": "前端精读之前写了 23 篇设计模式总结文，再加上 6 种设计原则，开闭、单一职责、依赖倒置、接口分离、迪米特法则、里氏替换原则，基本上对代码的可维护性有了全面深刻的理解。",
    "url": "https://segmentfault.com/a/1190000040791286",
    "author": "黄子毅",
    "home_url": "https://segmentfault.com/u/aoyangyudakong",
    "votes": "4",
    "rank": 3
  },
  {
    "title": "React源码中的位运算技巧",
    "description": "大家好，我卡颂。这两年有不少朋友和我吐槽React源码，比如：调度器为什么用小顶堆这种数据结构，直接用数组不行？源码里各种单向链表、环状链表，直接用数组不行？源码里各种位运算，有必要么？作为业务依赖的框...",
    "url": "https://segmentfault.com/a/1190000040791673",
    "author": "卡颂",
    "home_url": "https://segmentfault.com/u/kasong",
    "votes": "3",
    "rank": 4
  },
  {
    "title": "DrawIO 二开 —— 是时候给你的 ProcessOn 充值终身 VIP 了",
    "description": "本文从使用角度入手，循序渐进的讲述 DrawIO 是什么，为什么要基于 DrawIO 进行二次开发以及 DrawIO 二次开发的核心技术细节并抽象出了一套通用二开架构，因此文章内容较长，不同阶段的读者可以根据需求进行阅读...",
    "url": "https://segmentfault.com/a/1190000040793817",
    "author": "云音乐大前端团队",
    "home_url": "https://segmentfault.com/u/musicfe",
    "votes": "1",
    "rank": 5
  },
  {
    "title": "教你用Java7的Fork/Join框架开发高并发程序",
    "description": "摘要：Fork/Join框架位于J.U.C(java.util.concurrent)中，是Java7中提供的用于执行并行任务的框架，其可以将大任务分割成若干个小任务，最终汇总每个小任务的结果后得到最终结果。",
    "url": "https://segmentfault.com/a/1190000040792751",
    "author": "华为云开发者社区",
    "home_url": "https://segmentfault.com/u/huaweiyunkaifazheshequ",
    "votes": "2",
    "rank": 6
  },
  {
    "title": "LeetCode-047-全排列 II",
    "description": "题目描述：给定一个可包含重复数字的序列 nums ，按任意顺序 返回所有不重复的全排列。示例说明请见LeetCode官网。来源：力扣（LeetCode） 链接：[链接] 著作权归领扣网络所有。商业转载请联系官方授权，非商业转...",
    "url": "https://segmentfault.com/a/1190000040797282",
    "author": "雄狮虎豹",
    "home_url": "https://segmentfault.com/u/xiongshihubao",
    "votes": "2",
    "rank": 7
  },
  {
    "title": "12种 vo2dto 方法，就 BeanUtils.copyProperties 压测最拉胯！【快双11了，别用错喽】",
    "description": "没有技术深度、短缺知识储备、匮乏经验积累的前提下，怎么写代码？百度呀，遇到问题这搜一点，那查一块，不管它是什么原理还是适合哪种场景，先粘贴到自己的工程里，看，能跑了，能跑就行。那这样的代码也就仅仅...",
    "url": "https://segmentfault.com/a/1190000040791635",
    "author": "小傅哥",
    "home_url": "https://segmentfault.com/u/fuzhengwei",
    "votes": "2",
    "rank": 8
  },
  {
    "title": "Kafka成长记6：Producer如何将消息放入到内存缓冲区（上）",
    "description": "之前我们分析了Producer的配置解析、组件分析、拉取元数据、消息的初步序列化方式、消息的路由策略。如下图：这一节我们继续分析发送消息的内存缓冲器原理—RecordAccumulator.append()。如何将消息放入内存缓冲器...",
    "url": "https://segmentfault.com/a/1190000040796995",
    "author": "繁茂",
    "home_url": "https://segmentfault.com/u/fanmao",
    "votes": "1",
    "rank": 9
  },
  {
    "title": "Kakfa成长记8：Producer如何将消息放入到内存缓冲区（下）",
    "description": "上一节我们主要分析了RecordAccumulator通过BufferPool申请内存的源码原理，在之前的分析中，在KafkaProducer发送消息时，把消息放入内存缓冲区中主要分为了三步。如下：",
    "url": "https://segmentfault.com/a/1190000040796978",
    "author": "繁茂",
    "home_url": "https://segmentfault.com/u/fanmao",
    "votes": "1",
    "rank": 10
  },
  {
    "title": "Kafka成长记6：Producer如何将消息放入到内存缓冲区（上）",
    "description": "之前我们分析了Producer的配置解析、组件分析、拉取元数据、消息的初步序列化方式、消息的路由策略。如下图：这一节我们继续分析发送消息的内存缓冲器原理—RecordAccumulator.append()。如何将消息放入内存缓冲器...",
    "url": "https://segmentfault.com/a/1190000040796853",
    "author": "繁茂",
    "home_url": "https://segmentfault.com/u/fanmao",
    "votes": "1",
    "rank": 11
  },
  {
    "title": "如何发现 Kubernetes 中服务和工作负载的异常",
    "description": "大家好，我是来自阿里云的李煌东，今天由我为大家分享 Kubernetes 监控公开课的第二节内容：如何发现 Kubernetes 中服务和工作负载的异常。",
    "url": "https://segmentfault.com/a/1190000040795784",
    "author": "阿里巴巴云原生",
    "home_url": "https://segmentfault.com/u/alixitongruanjianjishu",
    "votes": "1",
    "rank": 12
  },
  {
    "title": "了解rxjs中的defer",
    "description": "下面介绍一个少有人知道的observable -- defer，如何使用，什么时候使用读这篇文章之前，你需要对rxjs基础用法有一定的了解假设我们需要写一个自定义operator叫做tapOnce。接收一个函数当作参数，只有流的第一次...",
    "url": "https://segmentfault.com/a/1190000040795738",
    "author": "阿古达木",
    "home_url": "https://segmentfault.com/u/chenxiang_594a1cea112c2",
    "votes": "1",
    "rank": 13
  },
  {
    "title": "手把手教你GitBook使用",
    "description": "你好，我是悦创。首发博客：[链接]详细的记录了一步步搭建自己的电子文档笔记1. 环境搭建1.1 安装 Nodejs大佬级别直接看下面这句话，就没啥问题：这个安装很简单，只需要下载，然后一路 next 即可。下载链接：[链...",
    "url": "https://segmentfault.com/a/1190000040792967",
    "author": "AI悦创",
    "home_url": "https://segmentfault.com/u/andersonhjb_616307b318448",
    "votes": "1",
    "rank": 14
  },
  {
    "title": "聊聊 Kafka Consumer 那点事",
    "description": "在上一篇中我们详细聊了关于 Kafka Producer 内部的底层原理设计思想和细节, 本篇我们主要来聊聊 Kafka Consumer 即消费者的内部底层原理设计思想。",
    "url": "https://segmentfault.com/a/1190000040792326",
    "author": "LNMPRG源码研究",
    "home_url": "https://segmentfault.com/u/php7internal",
    "votes": "2",
    "rank": 15
  },
  {
    "title": "程序员写简历时的技术词汇拼写规范备忘录",
    "description": "求职前，我们都会花很多的时间在自己的技术水平提升+笔/面试的准备之上，但往往却忽略了找工作第一步所需要的一个严谨且靠谱的简历。而程序员写简历，第一步就是需要注意严谨而规范地使用各种技术词汇。",
    "url": "https://segmentfault.com/a/1190000040791119",
    "author": "CodeSheep",
    "home_url": "https://segmentfault.com/u/hansonwang99",
    "votes": "2",
    "rank": 16
  },
  {
    "title": "ShardingSphere X Google 编程之夏：同学，开源你怎么看？",
    "description": "Apache ShardingSphere 社区有幸参与 Google 编程之夏（Google Summer of Code, 以下简称 GSoC)，指导年轻一代参与开源程序代码设计。GSoC 是 Google 公司主办的年度开源程序设计项目，第一届从 2005 年开始，主...",
    "url": "https://segmentfault.com/a/1190000040793731",
    "author": "SphereEx",
    "home_url": "https://segmentfault.com/u/sphereex",
    "votes": "1",
    "rank": 17
  },
  {
    "title": "为了让你搞定数据库选型，这些工程师重写了 26 万行代码",
    "description": "传统 SOL、NoSQL 还是 NewSQL？架构风格是以久经考验的关系型数据库为主，还是偏向所谓原生的分布式架构？如果提及具体产品，那选择就更多了，TiDB、OceanBase、PolarDB、TDSQL、GaussDB、MongoDB…… 现在还有许多...",
    "url": "https://segmentfault.com/a/1190000040793702",
    "author": "SphereEx",
    "home_url": "https://segmentfault.com/u/sphereex",
    "votes": "1",
    "rank": 18
  }
]